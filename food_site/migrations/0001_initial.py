# Generated by Django 4.2.8 on 2024-03-14 07:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('slug', models.SlugField(max_length=20, verbose_name='Слаг')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание')),
                ('time_cook', models.PositiveIntegerField(default=0, verbose_name='Время готовки')),
                ('portion', models.PositiveIntegerField(default=1, verbose_name='Порций')),
                ('products', models.TextField(max_length=2000, verbose_name='Продукты')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('image', models.ImageField(blank=True, null=True, upload_to='food/<django.db.models.fields.CharField>', verbose_name='Изображение')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-date_created'],
                'indexes': [models.Index(fields=['-date_created'], name='food_site_f_date_cr_878e44_idx')],
            },
            managers=[
                ('manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
